<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zwd.springboot.mapper.ProductMapper">

	<select id="getProductById" parameterType="String"
		resultType="com.zwd.springboot.entity.Product">
		SELECT id,name,category,price,place,code FROM product where
		id=#{id}
	</select>

	<select id="getAllProduct"
		resultType="com.zwd.springboot.entity.Product">
		SELECT id,name,category,price,place,code FROM product
	</select>


	<select id="getProductList"
		parameterType="com.example.lucene.entity.PageQuery"
		resultType="com.zwd.springboot.entity.Product">
		SELECT id,name,category,price,place,code FROM product
		<where>
			<if test="params.name!=null and params.name!='' ">
				and name=#{params.name}
			</if>
			<if test="params.category!=null and params.category!='' ">
				and category=#{params.category}
			</if>
			<if test="params.price!=null and params.price!='' ">
				and price=#{params.price}
			</if>
			<if test="params.place!=null and params.place!='' ">
				and plac=#{params.place}
			</if>
			<if test="params.code!=null and params.code!='' ">
				and code=#{params.code}
			</if>
			<if
				test="queryParam.searchKeyStr!=null and queryParam.searchKeyStr!=''">
				and (
				locate(#{queryParam.searchKeyStr},name)>0
				or
				locate(#{queryParam.searchKeyStr},category)>0
				or
				locate(#{queryParam.searchKeyStr},place)>0
				)
			</if>
		</where>
		<if
			test="sort.field!=null and sort.field!='' and sort.order!=null and sort.order!=''">
			order by ${sort.field} ${sort.order}
		</if>
	</select>

	<insert id="addProduct" useGeneratedKeys="true" keyProperty="id"
		parameterType="com.zwd.springboot.entity.Product">
		INSERT INTO `product` (`name`, `category`, `price`,
		`place`, `code`)
		values(#{name},#{category},#{price},#{place},#{code})
	</insert>

	<delete id="deleteProductById" parameterType="String">
		delete
		FROM
		`product` where id =#{id}
	</delete>

	<update id="updateProductById"
		parameterType="com.zwd.springboot.entity.Product">
		UPDATE `product` SET
		`name`=#{name}, `category`=#{category},
		`price`=#{price}, `place`=#{place}, `code`=#{code} 
		<where>id = #{id}</where>
	</update>


</mapper>